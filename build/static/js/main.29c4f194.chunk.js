(this["webpackJsonpsketchfab-configurator-studio"]=this["webpackJsonpsketchfab-configurator-studio"]||[]).push([[0],{23:function(t,e,n){},32:function(t,e,n){},33:function(t,e){window.onclick=function(t){var e=document.getElementById("modal");t.target===e&&(e.style.display="none")}},34:function(t,e,n){"use strict";n.r(e);var i=n(0),o=n(1),a=n.n(o),r=n(7),l=n.n(r),s=(n(23),n(2)),c=n(8),d=n(6),u={modelId:"",materials:[],animations:[],sceneGraph:[],controls:[],textureControls:[],disableButtons:!0,latestControlId:0,sketchfabAPI:null,sceneGraphIsVisible:{},viewMode:"options",surfaceOptionMap:{},surfaceConfigurationMode:!1,geometryCategoryOptions:[]},m=Object(c.b)({name:"viewer",initialState:u,reducers:{resetState:function(t){u},setSketchfabAPI:function(t,e){t.sketchfabAPI=e.payload},setModelId:function(t,e){t.modelId=e.payload},setMaterials:function(t,e){t.materials=e.payload},setAnimations:function(t,e){t.animations=e.payload},setSceneGraph:function(t,e){Object(d.buildSceneGraph)(t,e.payload.children[0].children,0),Object(d.buildGeometryCategoryOptions)(t)},setSceneGraphIsVisible:function(t,e){var n=e.payload,i=n.id,o=n.value;t.sceneGraphIsVisible[i]=o},createControl:function(t,e){t.latestControlId=t.latestControlId+=1;var n=t.latestControlId,i={};"animation"===e.payload&&(i={animationUID:"none",startTime:"0",endTime:"0",isDisabledInitially:!1}),"geometryCategory"===e.payload&&(i={designations:[],geometries:[],hiddenValues:[],allowsAnimation:[]}),t.controls.unshift({type:e.payload,id:n,name:e.payload,entityIndex:"none",entity:{instanceID:0},configuration:i,initialValue:"",isExpanded:!0})},setViewMode:function(t,e){t.viewMode=e.payload},setControls:function(t,e){for(var n=JSON.parse(JSON.stringify(e.payload)),i=0;i<n.length;++i){if("animation"===n[i].type)for(var o=0;o<t.animations.length;++o)n[i].configuration.animationName===t.animations[o][1]&&(n[i].configuration.animationUID=t.animations[o][0]);if("textureCategory"===n[i].type&&(t.surfaceConfigurationMode=!0),"geometryCategory"===n[i].type)for(var a=0;a<n[i].configuration.geometries.length;++a)void 0===n[i].configuration.geometries[a].hiddenValues&&(n[i].configuration.geometries[a].hiddenValues=[])}t.controls=n},setTextureControls:function(t,e){for(var n=0;n<e.payload.length;++n)t.latestControlId=t.latestControlId+=1,e.payload[n].id=t.latestControlId;t.textureControls=e.payload},addTextureControls:function(t){t.controls=t.controls.concat(t.textureControls)},toggleDisableButtons:function(t){t.disableButtons=!1},updateControl:function(t,e){var n=e.payload,i=n.id,o=n.key,a=n.value;console.log(e.payload);for(var r=0;r<t.controls.length;++r)t.controls[r].id==i&&(t.controls[r][o]=a)},setSurfaceOptionMap:function(t,e){console.log("setSurfaceOptionMap -> action.payload"),console.log(e.payload),t.surfaceOptionMap=e.payload},setSurfaceConfigurationMode:function(t,e){t.surfaceConfigurationMode=e.payload},setUnselectedGeometries:function(t,e){t.geometryCategoryOptions=e.payload},setAllNodesVisible:function(t,e){for(var n=0;n<Object.keys(t.sceneGraphIsVisible).length;++n)e.payload?t.sketchfabAPI.show(Object.keys(t.sceneGraphIsVisible)[n]):t.sketchfabAPI.hide(Object.keys(t.sceneGraphIsVisible)[n]),t.sceneGraphIsVisible[Object.keys(t.sceneGraphIsVisible)[n]]=e.payload}}}),p=m.actions,f=(p.resetState,p.setModelId),g=p.createControl,h=p.toggleDisableButtons,b=p.updateControl,v=p.setControls,y=p.setTextureControls,j=p.addTextureControls,x=p.setSceneGraph,O=p.setSceneGraphIsVisible,C=p.setViewMode,N=p.setUnselectedGeometries,k=p.setSurfaceOptionMap,I=p.setSurfaceConfigurationMode,S=p.setAllNodesVisible,B=p.setAnimations,D=p.setMaterials,w=p.setSketchfabAPI,A=function(t){return t.modelId},E=function(t){return t.materials},T=function(t){return t.animations},G=function(t){return t.controls},M=function(t){return t.disableButtons},_=function(t){return t.sceneGraph},q=function(t){return t.sketchfabAPI},L=function(t){return t.sceneGraphIsVisible},V=function(t){return t.viewMode},R=function(t){return t.surfaceOptionMap},U=function(t){return t.surfaceConfigurationMode},J=function(t){return t.geometryCategoryOptions},P=function(){return function(t){var e=document.getElementById("import-modal"),n=e.style.display;e.style.display="block"===n?"none":"block"}},H=function(){return function(t){var e=document.getElementById("modal"),n=e.style.display;e.style.display="block"===n?"none":"block"}},z=function(){return function(t){var e=document.getElementById("control-choice-modal"),n=e.style.display;e.style.display="block"===n?"none":"block"}},W=m.reducer,F=n(15),Y=n.n(F),Z=function(t){return function(e){e(v([]));var n,i,o,a,r,l,s=document.getElementById("api-frame"),c=[];a=function(){o.getCurrentTime((function(t,e){if(!n){var i=100*e/r;l.value=i,document.getElementById("timeDisplay").innerHTML=e.toFixed(2),2==e&&o.seekTo(1),requestAnimationFrame(a)}}))},{api:null,config:null,options:[],init:function(t,s){this.config=t,new Y.a("1.9.0",s).init(t.urlid,{ui_controls:0,graph_optimizer:0,ui_animations:0,ui_watermark:0,ui_inspector:0,ui_stop:0,ui_infos:0,success:function(t){document.getElementById("animationControls").innerHTML='\n                        <div style="display: flex; justify-content: center;">\n                          <p id="timeDisplay"></p>\n                          <p id="animationName" style="margin-left: 50px;"></p>\n                        </div>\n                        <button id="play">Play</button>\n                        <button id="pause">Pause</button>\n                        <button id="previous">Previous</button>\n                        <button id="next">Next</button>\n                        <input \n                          id="timeSlider" \n                          class="slider timeSlider" \n                          style="width:100%" \n                          type="range" \n                          min="0" \n                          max="100" \n                          step="0.1" \n                          value="0"\n                        />\n                    ',o=t,e(w(t)),t.start(),t.addEventListener("viewerready",function(){this.api=t,t.pause(),t.getAnimations((function(o,s){(c=s,e(B(s)),0==s.length)?document.getElementById("animationControls").innerHTML="":(document.getElementById("pause").addEventListener("click",(function(){t.pause()})),document.getElementById("play").addEventListener("click",(function(){t.play()})),document.getElementById("previous").addEventListener("click",(function(){0===i&&(i=c.length),i--,t.setCurrentAnimationByUID(c[i][0]),t.seekTo(0),r=c[i][2],document.getElementById("animationName").innerHTML=c[i][1]})),document.getElementById("next").addEventListener("click",(function(){++i===c.length&&(i=0),t.setCurrentAnimationByUID(c[i][0]),t.seekTo(0),r=c[i][2],document.getElementById("animationName").innerHTML=c[i][1]})),document.getElementById("animationName").innerHTML=c[0][1],i=0,t.setCurrentAnimationByUID(s[i][0]),r=s[i][2],n=!1,(l=document.getElementById("timeSlider")).addEventListener("change",(function(){n=!1;var t=r*l.value/100;document.getElementById("timeDisplay").innerHTML=t.toFixed(2)})),l.addEventListener("input",(function(){n=!0;var e=r*l.value/100;document.getElementById("timeDisplay").innerHTML=e.toFixed(2),t.pause(),t.seekTo(e)})),a())})),e(h()),t.getSceneGraph((function(t,n){t?console.log("Error getting nodes"):e(x(n))})),t.getMaterialList((function(t,n){e(D(n));var i=Object(d.buildTextureOptions)(n);e(k(i.surfaceOptionMap)),e(y(i.surfaceControls))}))}.bind(this))}.bind(this),error:function(){console.log("Viewer error")}})}}.init({urlid:""!==t?t:"256c6851707048a69320bffb9573e448"},s)}},$=function(){var t=Object(s.c)(A),e=Object(s.c)(M),n=Object(s.b)();return Object(i.jsxs)("div",{className:"header",children:[Object(i.jsx)("h1",{className:"header__title",children:"Configurator Studio - v1.0.24"}),Object(i.jsxs)("div",{className:"header__buttons",children:[Object(i.jsx)("input",{id:"model-id-input",value:t,onChange:function(t){return n(f(t.target.value))}}),Object(i.jsx)("button",{id:"displayButton",className:"header__button",onClick:function(){return n(Z(t))},children:"Load Model"}),Object(i.jsx)("button",{id:"import-javascript",className:"header__button",disabled:e,onClick:function(){return n(P())},children:"Import Configuration"}),Object(i.jsx)("button",{id:"export-javascript",className:"header__button",disabled:e,onClick:function(){return n(H())},children:"Export"})]})]})},K=function(){return Object(i.jsxs)("div",{class:"viewer",children:[Object(i.jsx)("iframe",{src:"",id:"api-frame",title:"sketchfab-viewer",allowfullscreen:!0,mozallowfullscreen:"true",webkitallowfullscreen:"true"}),Object(i.jsx)("div",{id:"animationControls"})]})},Q=function(){var t=Object(s.b)();return Object(i.jsx)("div",{id:"import-modal",children:Object(i.jsxs)("div",{className:"modal__content",children:[Object(i.jsx)("span",{class:"close",onClick:function(){return t(P())},children:"\xd7"}),Object(i.jsx)("div",{className:"modal__header",children:Object(i.jsx)("h1",{children:"Paste Controls Here:"})}),Object(i.jsx)("button",{onClick:function(){var e=document.getElementById("js-input").value.replace("var controls = ",""),n=JSON.parse(e);t(v(n)),t(P())},children:"Import"}),Object(i.jsx)("input",{id:"js-input"})]})})},X=function(t){var e=t.controls,n=t.modelId,i=t.sceneGraph,o=t.materials,a=t.surfaceOptionMap;return"\n// Sketchfab Viewer API: Change Texture/material\nvar version = '1.9.0';\nvar iframe = document.getElementById('api-frame');\nvar client = new window.Sketchfab(version, iframe);\n\nvar uid = '".concat(""===n?"256c6851707048a69320bffb9573e448":n,"';\n\n/*\n\tCOPY THE LINE BELOW\n*/\n\nvar controls = ").concat(JSON.stringify(e),"\n\n/*\n\tCOPY THE LINE ABOVE\n*/\n\nvar myMaterials = ").concat(JSON.stringify(o),"\n\nvar sceneGraph = ").concat(JSON.stringify(i),"\n\nvar isElementCategoryControlled = false;\nvar surfaceConfigurationMode = false;\nvar surfaceOptionMap = ").concat(JSON.stringify(a),';\n\nvar animationObjects = {};\n\nvar controlsContainer = document.getElementById(\'sketchfab-lower-controls\');\nvar toggleableItems = {};\n\nvar currentAnimationIndex = 0;\nvar currentAnimationEndTime = 0;\n\nvar appContainer = document.querySelector("div.sketchfab__container")\nappContainer.style.display = "block"\n\nvar globalDisabledControls = [];\n\nvar apiSkfb, pollTime;\n\nvar animationsEnabled = false;\n\npollTime = function() {\n\tapiSkfb.getCurrentTime(function(err, time) {\t\n\t\tif (animationsEnabled) {\n\t\t\tif (currentAnimationEndTime > 0 && time >= currentAnimationEndTime) {\n\t\t\t\tapiSkfb.pause();\n\t\t\t}\n\t\t\trequestAnimationFrame(pollTime);\n\t\t}\n\t});\n};\n\n\nvar success = function(api) {\n    apiSkfb = api;\n\tapi.start(function() {\n\t\tapi.addEventListener(\'viewerready\', function() {\n\t\t\t\n\t\t\tapi.pause();\n\t\t\t\n\t\t\tvar animations = [];\n\t\t\tfor (let i = 0; i < controls.length; ++i) {\t\n\t\t\t\tglobalDisabledControls.push(false);\n\t\t\t\tif (controls[i].type == "animation") {\n\t\t\t\t\tvar animationControls = document.getElementById("sketchfab-animation-controls")\n\t\t\t\t\tanimationControls.style.display = "block";\n\t\t\t\t\t\n\t\t\t\t\tvar animationButtonContainer = document.getElementById("sketchfab-animation-buttons")\n\t\t\t\t\tvar animationButton = document.createElement("button")\n\t\t\t\t\tanimationButton.id = "animation-" + controls[i].id + "-" + i\n\t\t\t\t\tanimationButton.textContent = controls[i].name;\n\t\t\t\t\tanimationButton.addEventListener(\'click\', function(e) {\n\t\t\t\t\t\tvar animationId = e.target.id.split("-")[1]\n\t\t\t\t\t\tcurrentAnimationIndex = e.target.id.split("-")[2]\n\t\t\t\t\t\tvar startTime = animationObjects[animationId].startTime;\n\t\t\t\t\t\tvar endTime = animationObjects[animationId].endTime;\n\t\t\t\t\t\tvar animationUID = animationObjects[animationId].uid;\n\t\t\t\t\t\tcurrentAnimationEndTime = endTime;\n\n\t\t\t\t\t\tapiSkfb.setCurrentAnimationByUID(animationUID)\n\t\t\t\t\t\tapiSkfb.seekTo(startTime);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar animationButtons = document.querySelector("#sketchfab-animation-buttons").querySelectorAll("button")\n\t\t\t\t\t\tfor (var j=0; j<animationButtons.length; ++j) {\n\t\t\t\t\t\t\tanimationButtons[j].disabled = false;\n\t\t\t\t\t\t\tanimationButtons[j].style.border = "none"\n\t\t\t\t\t\t\tanimationButtons[j].style.opacity = 1\n\t\t\t\t\t\t\tif (animationButtons[j].textContent === e.target.textContent) {\n\t\t\t\t\t\t\t\tanimationButtons[j].disabled = true;\n\t\t\t\t\t\t\t\tanimationButtons[j].style.border = "1px solid black"\n\t\t\t\t\t\t\t\tanimationButtons[j].style.opacity = 0.5\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetTimeout(function() { apiSkfb.play();\t}, 100);\n\t\t\t\t\t})\n\t\t\t\t\tanimationButtonContainer.appendChild(animationButton)\n\t\t\t\t\t\n\t\t\t\t\tvar isInitialAnimationPosition = controls[i].configuration.isDisabledInitially\n\t\t\t\t\tif (isInitialAnimationPosition) {\n\t\t\t\t\t\tanimationButton.disabled = true;\n\t\t\t\t\t\tanimationButton.style.border = "1px solid black"\n\t\t\t\t\t\tanimationButton.style.opacity = 0.5\n\t\t\t\t\t\tcurrentAnimationIndex = i\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tanimations.push(controls[i]);\n\t\t\t\t\tanimationObjects[controls[i].id] = {name: controls[i].name, startTime: Number(controls[i].configuration.startTime), endTime: Number(controls[i].configuration.endTime), uid: controls[i].configuration.animationUID}; \n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar singleControlContainer = document.createElement("div");\n\t\t\t\tsingleControlContainer.classList.add("sketchfab-single-control-container");\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (controls[i].type == "color") {\n\t\t\t\t\tvar resetBut = document.createElement("button");\n\t\t\t\t\tresetBut.innerHTML = "Reset";\n\t\t\t\t\tresetBut.onclick = function(e) {\t\n\t\t\t\t\t\tvar m = myMaterials[controls[i].entityIndex];\n\t\t\t\t\t\tm = JSON.parse(JSON.stringify(controls[i].entity));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tapi.setMaterial(m);\n\t\t\t\t\t}\n\t\t\t\t\tsingleControlContainer.appendChild(resetBut);\n\t\t\t\t\t\n\t\t\t\t\tfor (let j = 0; j < controls[i].additionalColors.length; ++j) {\n\t\t\t\t\t\tvar colorBut = document.createElement("button");\n\n\t\t\t\t\t\tcolorBut.innerHTML = controls[i].additionalColors[j].name;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcolorBut.id = controls[i].id + "-" + controls[i].name\n\t\t\t\t\t\tcolorBut.onclick = function(e) {\t\n\t\t\t\t\t\t\tvar m = myMaterials[controls[i].entityIndex];\n\t\t\t\t\t\t\tm.channels.AlbedoPBR.factor = 1;\n\t\t\t\t\t\t\tm.channels.AlbedoPBR.enable = true;\n\t\t\t\t\t\t\tm.channels.AlbedoPBR.color = controls[i].additionalColors[j].colorRGB;\n\t\t\t\t\t\t\tm.channels.AlbedoPBR.texture = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tm.channels.DiffuseColor.factor = 1;\n\t\t\t\t\t\t\tm.channels.DiffuseColor.enable = true;\n\t\t\t\t\t\t\tm.channels.DiffuseColor.color = controls[i].additionalColors[j].colorRGB;\n\t\t\t\t\t\t\tm.channels.DiffuseColor.texture = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tm.channels.DiffusePBR.color = controls[i].additionalColors[j].colorRGB;\n\t\t\t\t\t\t\tm.channels.DiffusePBR.enable = false;\n\t\t\t\t\t\t\tm.channels.DiffusePBR.factor = 1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tapi.setMaterial(m);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsingleControlContainer.appendChild(colorBut);\n\t\t\t\t\t}\t\n\t\t\t\t} else if (controls[i].type === "geometryCategory") {\t\n\t\t\t\t\tisElementCategoryControlled = true;\n\t\t\t\t\t\n\t\t\t\t\tvar wrapper = initializeSelect(i);\n\t\t\t\t\twrapper.classList.add("sketchfab-geometry-category")\n\t\t\t\t\t\n\t\t\t\t\tvar customOptions = wrapper.querySelector(".sketchfab-options")\n\t\t\t\t\t\n\t\t\t\t\tfor (var j=0; j<controls[i].configuration.geometries.length; ++j) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet customOption = document.createElement("span")\n\t\t\t\t\t\tcustomOption.classList.add("sketchfab-option");\n\t\t\t\t\t\tvar name = controls[i].configuration.geometries[j].designation;\n\t\t\t\t\t\tvar humanReadable = controls[i].configuration.geometries[j].humanReadable;\n\t\t\t\t\t\tcustomOption.setAttribute("data-value", name)\n\t\t\t\t\t\tcustomOption.id = name + "-" + j + "-" + i;\n\t\t\t\t\t\tcustomOption.innerHTML = name + " - " + humanReadable;\n\t\t\t\t\t\tif (controls[i].configuration.geometries[j].designation === controls[i].initialValue) {\n\t\t\t\t\t\t\tcustomOption.classList.add("selected")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomOption.addEventListener(\'click\', function(e) {\n\t\t\t\t\t\t\thandleUpdateSelect(e);\n\t\t\t\t\t\t\tdisableAnimations();\n\t\t\t\t\t\t\thandleHidingGeometryCombinations();\n\t\t\t\t\t\t\tsetVisibleNodes(api);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t\tcustomOptions.appendChild(customOption)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tsingleControlContainer.appendChild(wrapper);\t\t\n\t\t\t\t} else if (controls[i].type === "textureCategory") {\n\t\t\t\t\tsurfaceConfigurationMode = true\t\t\t\t\t\n\t\t\t\t\tconst { geometryName, options, isPrimary, ordering} = controls[i].configuration\n\t\t\t\t\t\n\t\t\t\t\tvar controlIndex = i;\n\t\t\t\t\tvar wrapper = initializeSelect(controlIndex, geometryName)\n\t\t\t\t\twrapper.classList.add("sketchfab-texture-category")\n\t\t\t\t\twrapper.id = geometryName + "-" + ordering;\n\t\t\t\t\t\n\t\t\t\t\tvar customOptions = wrapper.querySelector(".sketchfab-options")\n\t\t\t\t\t\n\t\t\t\t\t\tfor (var j=0; j<options.length; ++j) {\n\t\t\t\t\t\t\tlet customOption = document.createElement("span")\n\t\t\t\t\t\t\tcustomOption.classList.add("sketchfab-option");\n\t\t\t\t\t\t\tconst { name, humanReadable } = options[j];\n\t\t\t\t\t\t\tif (name === controls[i].initialValue) {\n\t\t\t\t\t\t\t\tcustomOption.classList.add("selected");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcustomOption.setAttribute("data-value", name)\n\t\t\t\t\t\t\tcustomOption.id = name + "-" + geometryName + "-" + j + "-" + j + "-" + i;\n\t\t\t\t\t\t\tcustomOption.innerHTML = name + " - " + humanReadable;\n\t\t\t\t\t\t\tcustomOption.addEventListener(\'click\', e => {\n\t\t\t\t\t\t\t\thandleUpdateSelect(e);\t\t\t\n\t\t\t\t\t\t\t\thandleHidingTextureCombinations()\n\t\t\t\t\t\t\t\tconfigureMaterials(api) \n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcustomOptions.appendChild(customOption)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsingleControlContainer.appendChild(wrapper);\n\t\t\t\t\t\t\n\t\t\t\t} else if (controls[i].type == "toggle") {\n\t\t\t\t\ttoggleableItems[String(controls[i].entity.instanceID)] = "visible";\n\t\t\t\t\tvar toggleBut = document.createElement("button");\n\t\t\t\t\ttoggleBut.innerHTML = "Toggle " + controls[i].name;\n\t\t\t\t\ttoggleBut.id = controls[i].entity.instanceID;\n\t\t\t\t\ttoggleBut.onclick = function(e) {\n\t\t\t\t\t\tvar isVisible = toggleableItems[e.target.id];\n\t\t\t\t\t\tif (isVisible == "visible") {\n\t\t\t\t\t\t\tapi.hide(e.target.id);\n\t\t\t\t\t\t\ttoggleableItems[String(controls[i].entity.instanceID)] = "hidden";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapi.show(e.target.id);\n\t\t\t\t\t\t\ttoggleableItems[String(controls[i].entity.instanceID)] = "visible";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsingleControlContainer.appendChild(toggleBut);\n\t\t\t\t}\n\t\t\t\tcontrolsContainer.appendChild(singleControlContainer);\n\t\t\t}\n\t\t\t\n\n\t\t\tif (isElementCategoryControlled) {\n\t\t\t\tsetVisibleNodes(api);\n\t\t\t\tdisableAnimations();\n\t\t\t\thandleHidingGeometryCombinations();\n\t\t\t}\n\t\t\t\n\t\t\tif (animations.length > 0) {\n\t\t\t\tpollTime();\t\t\t\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\tif (surfaceConfigurationMode) {\n\t\t\t\thandleHidingTextureCombinations()\n\t\t\t\tconfigureMaterials(api)\n\t\t\t}\n\t\t\twindow.addEventListener(\'click\', function(e) {\n\t\t\t\tfor (const select of document.querySelectorAll(\'.sketchfab-select\')) {\n\t\t\t\t\tif (!select.contains(e.target)) {\n\t\t\t\t\t\tselect.classList.remove(\'sketchfab-select-open\');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n};\n\nclient.init(uid, {\n\tsuccess: success,\n\terror: () => console.error(\'Sketchfab API error\'),\n\tautostart: 0,\n\tpreload: 0,\n\tui_animations: 0,\n\tui_watermark: 0,\n\tui_inspector: 0,\n\tui_stop: 0,\n\tui_infos: 0,\n\tui_fullscreen: window.innerWidth < 1000 ? 0 : 1,\n});\n\nvar handleHidingTextureCombinations = function(api) {\n\tconsole.log("BEGIN: handleHidingTextureCombinations")\n\t\n\tvar textureSelects = document.getElementsByClassName("sketchfab-texture-category")\t\n\tfor (var i=0; i<textureSelects.length; ++i) {\n\t\tvar options = textureSelects[i].getElementsByClassName("sketchfab-option");\n\t\tvar geometryName = textureSelects[i].id.split("-")[0]\n\t\tvar ordering = textureSelects[i].id.split("-")[1]\n\t\tvar isPrimary = Number(ordering) === 0;\n\t\tif (!isPrimary) {\n\t\t\tvar currentInitialPrimarySelection = document.getElementById(geometryName + "-0").querySelector(".sketchfab-select__trigger span").textContent;\n\t\t\tvar availableOptions = surfaceOptionMap[geometryName][currentInitialPrimarySelection][ordering-1].sort()\n\t\t\tvar previouslyAvailableOptions =  Array.from(options).filter(op => op.style.display === "block").map(op => op.getAttribute("data-value")).sort()\n\t\t\tlet equal = availableOptions.length == previouslyAvailableOptions.length && availableOptions.every((element, index)=> element === previouslyAvailableOptions[index] );\n\t\t\t\n\t\t\tvar triggerSpan = textureSelects[i].querySelector(".sketchfab-select__trigger span")\n\t\t\t\n\t\t\tif (!equal) {\n\t\t\t\tvar newValueSet = false;\n\t\t\t\tfor (var j=0; j<options.length; ++j) {\n\t\t\t\t\toptions[j].classList.remove("selected")\n\t\t\t\t\tvar optionValue = options[j].getAttribute("data-value")\n\t\t\t\t\toptions[j].style.display = "none"\n\t\t\t\t\tvar optionValue = options[j].getAttribute("data-value")\n\t\t\t\t\tif (availableOptions.includes(optionValue)) {\n\t\t\t\t\t\toptions[j].style.display = "block"\n\t\t\t\t\t\tif (!newValueSet) {\n\t\t\t\t\t\t\ttriggerSpan.textContent = optionValue;\n\t\t\t\t\t\t\toptions[j].classList.add("selected")\n\t\t\t\t\t\t\tnewValueSet = true;\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.log("END: handleHidingTextureCombinations")\n}\n\nvar configureMaterials = function(api) {\n\tconsole.log("BEGIN: configureMaterials")\n\tvar textureSelects = document.getElementsByClassName("sketchfab-texture-category")\t\n\tfor (var i=0; i<textureSelects.length; ++i) {\n\t\tvar geometryName = textureSelects[i].id.split("-")[0]\n\t\t//get array of selected values\n\t\tvar relevantSelects = document.getElementsByClassName(geometryName + "-triggerSpan")\n\t\t//build name string via accessing selected values\n\t\tvar materialNameString = geometryName + "-";\n\t\t\n\t\tfor (var j=0; j<relevantSelects.length; ++j) {\n\t\t\tmaterialNameString += relevantSelects[j].textContent + "-";\n\t\t}\n\t\tvar newMaterial;\n\t\tfor (var j=0; j<myMaterials.length; ++j) {\n\t\t\tif (myMaterials[j].name.startsWith(materialNameString)) {\n\t\t\t\tnewMaterial = JSON.parse(JSON.stringify(myMaterials[j]));\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (var j=0; j<myMaterials.length; ++j) {\n\t\t\tif (myMaterials[j].name === geometryName) {\n\t\t\t\tmyMaterials[j].channels = JSON.parse(JSON.stringify(newMaterial.channels));\n\t\t\t\tmyMaterials[j].reflection = newMaterial.reflection;\n\t\t\t\tmyMaterials[j].reflector = newMaterial.reflector;\n\t\t\t\tmyMaterials[j].shadeless = newMaterial.shadeless;\n\t\t\t\tapi.setMaterial(myMaterials[j], function() {console.log("material updated")})\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log("END: configureMaterials")\n}\n\nvar setVisibleNodes = function(api) {\n\tconsole.log("BEGIN: setVisibleNotes")\n\tvar allCategorySelects = document.querySelectorAll(".sketchfab-geometry-category span.sketchfab-select-value")\n\tvar selectedPrefixes = [];\n\t\n\tvar lettersByDesignation = {};\n\tfor (var i=0; i<allCategorySelects.length; ++i) {\n\t\tselectedPrefixes.push(allCategorySelects[i].textContent);\n\t\tlettersByDesignation[selectedPrefixes[i]] = []\n\t}\n\t\n\tvar relevantNodes = [];\n\t\n\tfor (var i=0; i<sceneGraph.length; ++i) {\n\t\tvar indexContainingCodes = i;\n\t\tif (sceneGraph[i].name === "MatrixTransform") {\n\t\t\tif (sceneGraph[i].depth < 3) {\n\t\t\t\tindexContainingCodes = i + 1;\n\t\t\t} else {\n\t\t\t\tindexContainingCodes = i - 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar nodeNameArray = sceneGraph[indexContainingCodes].name.split("-")\n\t\tvar currentNodeDesignation = nodeNameArray[0];\n\t\tvar currentNodeLetterCode = nodeNameArray[1];\n\t\tapi.hide(sceneGraph[indexContainingCodes].instanceID);\n\t\t\n\t\tif (selectedPrefixes.includes(currentNodeDesignation)) {\n\t\t\tfor (var j=0; j<currentNodeLetterCode.length; ++j) {\n\t\t\t\tif (lettersByDesignation[currentNodeDesignation].indexOf(currentNodeLetterCode[j]) === -1) {\n\t\t\t\t\tlettersByDesignation[currentNodeDesignation].push(currentNodeLetterCode[j])\n\t\t\t\t}\t\n\t\t\t}\t\t\n\t\t\t\n\t\t\trelevantNodes.push({\n\t\t\t\tletterCode: currentNodeLetterCode, \n\t\t\t\tinstanceID: sceneGraph[i].instanceID, \n\t\t\t\tname: sceneGraph[i].name, \n\t\t\t\tupstreamRelevantNodes: collectUpstreamNodes(i),\n\t\t\t\tboneNodes: collectBoneNodes(i),\n\t\t\t})\t\t\n\t\t}\n\t}\t\t\n\t\n\tvar letters = [];\n\tvar commonLetter = ""\n\tfor (var i=0; i<Object.values(lettersByDesignation).length; ++i) {\n\t\tif (Object.values(lettersByDesignation)[i].length === 1) {\n\t\t\tcommonLetter = Object.values(lettersByDesignation)[i][0]\n\t\t\tbreak;\n\t\t}\n\t\tletters = letters.concat(Object.values(lettersByDesignation)[i])\n\t\tcommonLetter = mode(letters)[0]\n\t}\n\tfor (var i=0; i<relevantNodes.length; ++i) {\n\t\tif (relevantNodes[i].letterCode.indexOf(commonLetter) != -1) {\n\t\t\tapi.show(relevantNodes[i].instanceID);\n\t\t\tfor (var j=0; j<relevantNodes[i].upstreamRelevantNodes.length; ++j) {\n\t\t\t\tapi.show(relevantNodes[i].upstreamRelevantNodes[j].instanceID)\n\t\t\t}\n\t\t\tfor (var j=0; j<relevantNodes[i].boneNodes.length; ++j) {\n\t\t\t\tapi.show(relevantNodes[i].boneNodes[j].instanceID);\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log("END: setVisibleNodes")\n}\n\nvar collectUpstreamNodes = function(nodeIndex) {\n\tvar nodeNameArray = sceneGraph[nodeIndex].name.split("-")\n\tvar initialNodeDesignation = nodeNameArray[0];\n\t\t\t\n\tvar currentUpstreamDepth = Number(sceneGraph[nodeIndex].depth)\n\tvar currentUpstreamIndex = nodeIndex - 1;\n\tvar upstreamRelevantNodes = []\n\twhile(currentUpstreamDepth > 1) {\n\t\tif (sceneGraph[currentUpstreamIndex].depth < currentUpstreamDepth) {\n\t\t\tvar currentUpstreamDesignation = sceneGraph[currentUpstreamIndex].name.split("-")[0]\n\t\t\tvar currentUpstreamLetterCode = sceneGraph[currentUpstreamIndex].name.split("-")[1]\n\t\t\tif (currentUpstreamDesignation !== initialNodeDesignation) {\n\t\t\t\tupstreamRelevantNodes.push({\n\t\t\t\t\tletterCode: currentUpstreamLetterCode, \n\t\t\t\t\tinstanceID: sceneGraph[currentUpstreamIndex].instanceID, \n\t\t\t\t\tname: sceneGraph[currentUpstreamIndex].name\n\t\t\t\t})\n\t\t\t}\t\n\t\t\tcurrentUpstreamDepth = Number(sceneGraph[currentUpstreamIndex].depth);\n\t\t}\n\t\tcurrentUpstreamIndex = currentUpstreamIndex - 1;\n\t}\n\n\treturn upstreamRelevantNodes;\n}\n\nvar collectBoneNodes = function(nodeIndex) {\n\t\n\tvar downStreamRelevantNodes = []\n\tif (sceneGraph[nodeIndex].type === "Group") {\n\t\tvar currentDownstreamIndex = nodeIndex + 1;\n\t\tvar initialDepth = Number(sceneGraph[nodeIndex].depth)\n\t\tvar currentDownstreamDepth = Number(sceneGraph[currentDownstreamIndex].depth)\n\t\twhile(currentDownstreamDepth>initialDepth && sceneGraph[currentDownstreamIndex] !== undefined) {\n\t\t\tvar currentDownStreamNode = {\n\t\t\t\tletterCode: "NA", \n\t\t\t\tinstanceID: sceneGraph[currentDownstreamIndex].instanceID, \n\t\t\t\tname: "NA", \n\t\t\t\tupstreamRelevantNodes: [],\n\t\t\t}\n\t\t\tdownStreamRelevantNodes.push(currentDownStreamNode)\t\n\t\t\tcurrentDownstreamDepth = sceneGraph[currentDownstreamIndex].depth;\n\t\t\tcurrentDownstreamIndex += 1;\n\t\t}\n\t}\n\t\n\treturn downStreamRelevantNodes;\n}\nvar mode = function(arr) { \n\tif(arr.filter((x,index) => arr.indexOf(x) == index).length == arr.length) {\n\t\treturn arr; \n\t} else {\n\t\treturn mode(arr.sort((x,index)=>x-index).map((x,index)=>arr.indexOf(x)!=index ? x : null ).filter(x=>x!=null))\n\t}\t\t\n}\n\nvar handleUpdateSelect = function(e) {\n\tconsole.log("BEGIN: handleUpdateSelect")\n\tvar nameCode = e.target.id.split("-")[0]\n\t\n\tif (!e.target.classList.contains(\'selected\')) {\n\t\t\n\t\te.target.parentNode.querySelector(\'.sketchfab-option.selected\').classList.remove(\'selected\');\n\t\te.target.classList.add(\'selected\');\n\t\te.target.closest(\'.sketchfab-select\').querySelector(\'.sketchfab-select__trigger span\').textContent = nameCode;\t\t\t\t\t\t\t\t\n\t}\n\tconsole.log("END: handleUpdateSelect")\n}\n\nvar handleHidingGeometryCombinations = function() {\n\tconsole.log("BEGIN: handleHidingGeometryCombinations")\n\t\t\t\t\n\tvar allCategoryOptions = document.querySelectorAll(".sketchfab-geometry-category .sketchfab-option")\n\tvar currentCategorySelections = Array.from(document.querySelectorAll(".sketchfab-geometry-category .sketchfab-select"))\n\t\t\t\t\t\t\t.map(select => select.querySelector(".sketchfab-select-value").textContent)\n\t\t\t\t\t\t\t\n\tvar allGeoSelects = document.getElementsByClassName("sketchfab-geometry-category")\n\t\t\t\t\t\t\t\n\tvar geometryControls = controls.filter(control => control.type === "geometryCategory")\n\n\tvar disabledOptions = []\n\tvar disabledControls = []\n\tfor(var i=0; i<geometryControls.length; ++i) {\n\t\tvar hiddenValues = geometryControls[i].configuration.geometries.filter(geometry => geometry.designation === currentCategorySelections[i])[0].hiddenValues;\n\t\tvar disabledValues = geometryControls[i].configuration.geometries.filter(geometry => geometry.designation === currentCategorySelections[i])[0].disabledTextureControls;\n\t\tconsole.log("geometryControls[" + i + "]:")\n\t\tconsole.log(geometryControls[i])\n\t\tdisabledOptions = disabledOptions.concat(hiddenValues)\n\t\tdisabledControls = disabledControls.concat(disabledValues)\n\t}\n\t\n\tfor (var i=0; i<allCategoryOptions.length; ++i) {\n\t\tallCategoryOptions[i].style.display = "block";\n\t\tif (disabledOptions.includes(allCategoryOptions[i].getAttribute("data-value"))) {\n\t\t\tallCategoryOptions[i].style.display = "none"\n\t\t}\n\t}\n\t\n\tfor (var i=0; i<currentCategorySelections.length; ++i) {\n\t\tif (disabledOptions.includes(currentCategorySelections[i])) {\n\t\t\tfor(var j=0; j<allGeoSelects[i].querySelectorAll(".sketchfab-option").length; ++j) {\n\t\t\t\tif (allGeoSelects[i].querySelectorAll(".sketchfab-option")[j].style.display === "block") {\n\t\t\t\t\tallGeoSelects[i].querySelector(".sketchfab-select-value").textContent = allGeoSelects[i].querySelectorAll(".sketchfab-option")[j].getAttribute("data-value")\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar dropdownControls = document.querySelectorAll(".sketchfab-single-control-container")\n\tvar nonCategoryControlOffset = 0;\n\tfor (var i=0; i<controls.length; ++i) {\n\t\tglobalDisabledControls[i] = false;\n\t\tif (controls[i].type.includes("Category")) {\n\t\t\tdocument.querySelectorAll(".sketchfab-single-control-container")[i-nonCategoryControlOffset].style.opacity = 1;\n\t\t\tif (disabledControls.includes(controls[i].name)) {\n\t\t\t\tglobalDisabledControls[i] = true;\n\t\t\t\tdocument.querySelectorAll(".sketchfab-single-control-container")[i-nonCategoryControlOffset].style.opacity = 0.3;\t\t\t\n\t\t\t}\n\t\t} else {\n\t\t\tnonCategoryControlOffset += 1;\n\t\t}\n\t}\n\tconsole.log("END: handleHidingGeometryCombinations")\n}\n\nvar disableAnimations = function() {\t\t\n\tvar allCategorySelects = document.querySelectorAll(".sketchfab-geometry-category span.sketchfab-select-value")\n\tvar allowAnimations = true;\n\tfor (var i=0; i<allCategorySelects.length; ++i) {\n\t\tvar controlIndex = allCategorySelects[i].id.split("-")[1]\n\t\tvar currentNameCode = allCategorySelects[i].textContent;\n\t\tfor (var j=0; j<controls[controlIndex].configuration.geometries.length; ++j) {\n\t\t\tif (controls[controlIndex].configuration.geometries[j].designation === currentNameCode) {\n\t\t\t\tif (controls[controlIndex].configuration.geometries[j].allowsAnimation === false) {\n\t\t\t\t\tallowAnimations = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tvar animationButtons = document.querySelectorAll("#sketchfab-animation-buttons button")\n\t\n\tfor (var i=0; i<animationButtons.length; ++i) {\n\t\tanimationButtons[i].disabled = true;\n\t}\n\t\n\tvar initiallyDisabled = animationsEnabled === false\n\t\n\tanimationsEnabled = false;\n\tif (allowAnimations) {\n\t\tfor (var i=0; i<animationButtons.length; ++i) {\n\t\t\tif (animationButtons[i].textContent !== controls[currentAnimationIndex].name) {\n\t\t\t\tanimationButtons[i].disabled = false;\n\t\t\t}\n\t\t}\t\n\t\tanimationsEnabled = true;\n\t\tif (initiallyDisabled) {\n\t\t\tvar animationUID = Object.values(animationObjects)[0].uid\n\t\t\tapiSkfb.setCurrentAnimationByUID(animationUID);\n\t\t\tpollTime();\n\t\t}\n\t}\n}\n\nvar initializeSelect = function(controlIndex, geometryName="") {\n\tconsole.log("BEGIN: initializeSelect:")\n\n\tvar wrapper = document.createElement("div")\n\twrapper.classList.add("sketchfab-select-wrapper")\t\n\tvar appWidth = Number(appContainer.clientWidth)\n\twrapper.style.width = (appWidth/4) + "px";\n\t\n\tvar select = document.createElement("div")\n\tselect.classList.add("sketchfab-select")\n\t\n\tvar selectTrigger = document.createElement("div")\n\tselectTrigger.classList.add("sketchfab-select__trigger")\n\t\n\tvar triggerSpan = document.createElement("span")\n\ttriggerSpan.id = "triggerSpan-" + controlIndex;\n\ttriggerSpan.classList.add("sketchfab-select-value")\n\ttriggerSpan.classList.add(geometryName + "-triggerSpan")\n\ttriggerSpan.textContent = controls[controlIndex].initialValue;\n\t\n\tvar arrow = document.createElement("div")\n\tarrow.classList.add("sketchfab-select-arrow")\n\t\n\tvar customOptions = document.createElement("div")\n\tcustomOptions.classList.add("sketchfab-options")\n\tvar selectTitle = document.createElement("h3")\n\tselectTitle.classList.add("sketchfab-title")\n\tselectTitle.textContent = controls[controlIndex].name;\n\t\n\tselectTrigger.appendChild(triggerSpan)\n\tselectTrigger.appendChild(arrow)\n\tcustomOptions.appendChild(selectTitle)\n\tselect.appendChild(selectTrigger)\n\tselect.appendChild(customOptions)\n\twrapper.appendChild(select)\t\n\n\twrapper.addEventListener(\'click\', function() {\n\t\tconsole.log("BEGIN: wrapper click");\n\t\tvar index = this.querySelector(".sketchfab-select-value").id.split("-")[1]\n\t\tif (globalDisabledControls[index] === false) {\n\t\t\tthis.querySelector(\'.sketchfab-select\').classList.toggle(\'sketchfab-select-open\');\t\n\t\t}\n\t\tconsole.log("END: wrapper click");\n\t})\n\t\n\treturn wrapper;\n\tconsole.log("END: initializeSelect:")\n}\n\n\n\n')},tt=function(){var t=Object(s.b)(),e={controls:Object(s.c)(G),modelId:Object(s.c)(A),sceneGraph:Object(s.c)(_),materials:Object(s.c)(E),surfaceOptionMap:Object(s.c)(R)};return Object(i.jsx)("div",{id:"modal",children:Object(i.jsxs)("div",{className:"modal__content",children:[Object(i.jsx)("span",{class:"close",onClick:function(){return t(H())},children:"\xd7"}),Object(i.jsx)("div",{className:"modal__header",children:Object(i.jsx)("h1",{children:"Add This To Your Page"})}),Object(i.jsx)("textarea",{id:"js-output",value:X(e)})]})})},et=function(){var t=Object(s.b)(),e=Object(s.c)(U);return Object(i.jsx)("div",{id:"control-choice-modal",children:Object(i.jsxs)("div",{className:"control-choice-content",children:[Object(i.jsx)("div",{className:"control-choice",style:{color:"red"},onClick:function(){t(g("animation")),t(z())},children:"Animation"}),Object(i.jsx)("div",{className:"control-choice",style:{color:"yellow"},onClick:function(){t(g("color")),t(z())},children:"Color"}),Object(i.jsx)("div",{className:"control-choice",style:{color:"blue"},onClick:function(){t(g("geometryCategory")),t(z())},children:"Geometry Category"}),Object(i.jsx)("div",{className:"control-choice",style:{visibility:e?"hidden":"visible",color:"green"},onClick:function(){!1===e&&(t(z()),t(j()),t(I(!0)))},children:"Texture Configuration"}),Object(i.jsx)("div",{className:"control-choice",style:{color:"purple"},onClick:function(){t(g("toggle")),t(z())},children:"Toggle"})]})})},nt=n(4),it=function(t){var e=Object(s.b)(),n=t.option,o=Object(s.c)(T),a=Object(s.c)(G),r=o.map((function(t){return Object(i.jsx)("option",{value:t[0],children:t[1]})}));return r.unshift(Object(i.jsx)("option",{value:"none",children:"Select an Animation"})),Object(i.jsxs)("div",{style:{display:"flex",alignItems:"flex-start",flexDirection:"column"},children:[Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsx)("input",{type:"checkbox",checked:n.configuration.isDisabledInitially,onChange:function(t){for(var i=n.configuration.isDisabledInitially,o=0;o<a.length;++o){var r=Object(nt.a)(Object(nt.a)({},a[o].configuration),{},{isDisabledInitially:!1});e(b({id:a[o].id,key:"configuration",value:r}))}var l=Object(nt.a)(Object(nt.a)({},n.configuration),{},{isDisabledInitially:!i});e(b({id:n.id,key:"configuration",value:l}))}}),Object(i.jsx)("div",{children:"Disable Initially"})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("label",{children:"Animation:"}),Object(i.jsx)("select",{name:"animationSelect",value:n.configuration.animationUID,onChange:function(t){var i=Object(nt.a)(Object(nt.a)({},n.configuration),{},{animationUID:t.target.value,animationName:t.target.options[t.target.selectedIndex].textContent});e(b({id:n.id,key:"configuration",value:i}))},children:r})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("label",{htmlFor:"start",children:"Start Time:"}),Object(i.jsx)("input",{type:"number",name:"start",value:n.configuration.startTime,onChange:function(t){var i=Object(nt.a)(Object(nt.a)({},n.configuration),{},{startTime:t.target.value});e(b({id:n.id,key:"configuration",value:i}))}})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("label",{htmlFor:"end",children:"End Time:"}),Object(i.jsx)("input",{type:"number",name:"end",value:n.configuration.endTime,onChange:function(t){var i=Object(nt.a)(Object(nt.a)({},n.configuration),{},{endTime:t.target.value});e(b({id:n.id,key:"configuration",value:i}))}})]})]})},ot=n(16),at=n.n(ot),rt=function(t,e,n){return null==e||void 0==e?Object(i.jsx)("div",{}):e.map((function(o,a,r){return Object(i.jsxs)("div",{className:"input__container",children:[Object(i.jsx)("label",{htmlFor:"defaultColor",children:"Alternate Color:"}),Object(i.jsx)("input",{type:"color",name:"additionalColor",id:"".concat(t,"-").concat(a,"-additionalColor"),value:e[a].color,onChange:function(e){for(var i=[],o=0;o<r.length;++o){var l={};o===a?(l.color=e.target.value,l.colorRGB=at()(e.target.value,{format:"array"}).map((function(t){return t/255})),l.name=r[o].name):(l.color=r[o].color,l.colorRGB=r[o].colorRGB,l.name=r[o].name),i[o]=l}n(b({id:t,key:"additionalColors",value:i}))}}),Object(i.jsx)("input",{type:"text",value:e[a].name,onChange:function(e){for(var i=[],o=0;o<r.length;++o){var l={};o===a?(l.color=r[o].color,l.colorRGB=r[o].colorRGB,l.name=e.target.value):(l.color=r[o].color,l.colorRGB=r[o].colorRGB,l.name=r[o].name),i[o]=l}n(b({id:t,key:"additionalColors",value:i}))}})]})}))},lt=function(t,e,n){var o=e.map((function(t,e){return Object(i.jsx)("option",{value:e,children:t.name})}));return o.unshift(Object(i.jsx)("option",{value:"none",children:"Select a Material"})),Object(i.jsx)("select",{name:"materials",id:"materials",onChange:function(i){n(b({id:t.id,key:"entityIndex",value:i.target.value})),n(b({id:t.id,key:"entity",value:e[i.target.value]}))},value:t.entityIndex,children:o})},st=function(t){var e=Object(s.b)(),n=t.option,o=Object(s.c)(E);return Object(i.jsxs)("div",{children:[Object(i.jsxs)("div",{className:"input__container",children:[Object(i.jsx)("label",{htmlFor:"materials",children:"Material:"}),lt(n,o,e)]}),Object(i.jsx)("div",{className:"additional-color__container",id:"".concat(n.id,"-additionalColors"),children:rt(n.id,n.additionalColors,e)}),Object(i.jsx)("div",{className:"input__container",children:Object(i.jsx)("button",{id:"addColor",className:"add__button",onClick:function(){if(void 0===n.additionalColors||null===n.additionalColors){var t={id:n.id,key:"additionalColors",value:[{color:"#ffffff",name:"white",colorRGB:[1,1,1]}]};e(b(t))}else{for(var i=[],o=0;o<n.additionalColors.length;++o)i[o]=n.additionalColors[o];i.push({color:"#ffffff",name:"default",colorRGB:[1,1,1]}),e(b({id:n.id,key:"additionalColors",value:i}))}},children:"+ Add Color"})})]})},ct=n(5),dt=function(t){var e=Object(s.b)(),n=t.option,o=Object(s.c)(J),a=n.configuration.geometries,r=Object(s.c)(G),l=function(t){return r.filter((function(t){return"textureCategory"===t.type})).map((function(o){var a=n.configuration.geometries[t].disabledTextureControls.includes(o.name);return Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsx)("input",{type:"checkbox",checked:a,onChange:function(){var i=JSON.parse(JSON.stringify(n.configuration));a?i.geometries[t].disabledTextureControls=i.geometries[t].disabledTextureControls.filter((function(t){return t!==o.name})):i.geometries[t].disabledTextureControls.push(o.name),e(b({id:n.id,key:"configuration",value:i}))}}),Object(i.jsx)("div",{children:o.name})]})}))},c=function(t){for(var o=[],a=function(a){"geometryCategory"===r[a].type&&r[a].id!==n.id&&(s=r[a].configuration.geometries.map((function(o,l){var s=!1;if(void 0===n.configuration.geometries[t].hiddenValues){var c=JSON.parse(JSON.stringify(n.configuration));c.geometries[t].hiddenValues=[],e(b({id:n.id,key:"configuration",value:c}))}return n.configuration.geometries[t].hiddenValues.includes(o.designation)&&(s=!0),Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsx)("input",{type:"checkbox",checked:s,onChange:function(){var i=JSON.parse(JSON.stringify(n.configuration));console.log("controls[i]:"),console.log(r[a]),s?i.geometries[t].hiddenValues=i.geometries[t].hiddenValues.filter((function(t){return t!==o.designation})):i.geometries[t].hiddenValues.push(o.designation),e(b({id:n.id,key:"configuration",value:i}))}}),Object(i.jsx)("div",{children:o.designation})]})})),o.push(Object(i.jsxs)("div",{children:[Object(i.jsx)("div",{style:{marginLeft:4,color:"blue"},children:r[a].name}),s]})))},l=0;l<r.length;++l){var s;a(l)}return Object(i.jsxs)("div",{style:{textAlign:"left",marginLeft:16},children:[Object(i.jsx)("div",{style:{color:"blue",fontWeight:"bold"},children:"Disable When Selected:"}),o]})},d=function(t){var i=JSON.parse(JSON.stringify(n.configuration));i.geometries=t,e(b({id:n.id,key:"configuration",value:i}))};return Object(i.jsxs)("div",{className:"grouping__container",children:[Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsx)("p",{className:"nameFieldTitle",children:"Initial :"}),Object(i.jsx)("select",{onChange:function(t){return e(b({id:n.id,key:"initialValue",value:t.target.value}))},children:a.map((function(t,o){var a=!1;return""===n.initialValue&&0===o?(a=!0,e(b({id:n.id,key:"initialValue",value:t.designation}))):a=t.designation===n.initialValue,Object(i.jsx)("option",{selected:a,value:t.designation,children:t.designation})}))})]}),Object(i.jsxs)("div",{className:"additional-color__container",id:"".concat(n.id,"-additionalColors"),children:[Object(i.jsxs)("div",{style:{display:"flex",color:"blue",fontWeight:"bold"},children:["Selected Geometries: ",n.configuration.geometries.length]}),Object(i.jsx)("div",{style:{borderBottom:"1px solid black"},children:Object(i.jsx)(ct.ReactSortable,{list:a,setList:function(t){return d(t)},children:a.map((function(t,r){return Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsxs)("div",{children:[Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsx)("div",{style:{display:"flex",flex:"1 1 auto",fontWeight:"bold"},children:Object(i.jsx)("div",{children:t.designation})}),Object(i.jsx)("div",{children:"Animation:"}),Object(i.jsx)("input",{type:"checkbox",checked:t.allowsAnimation,onChange:function(){var e=JSON.parse(JSON.stringify(a));e[r].allowsAnimation=!t.allowsAnimation,d(e)}})]}),Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsx)("div",{children:"Name:"}),Object(i.jsx)("input",{type:"text",placeholder:"Enter human readable name",value:t.humanReadable,onChange:function(t){var e=JSON.parse(JSON.stringify(a));e[r].humanReadable=t.target.value,d(e)}})]}),c(r),Object(i.jsxs)("div",{style:{textAlign:"left",marginLeft:16},children:[Object(i.jsx)("div",{style:{color:"green",fontWeight:"bold"},children:"Disable When Selected:"}),l(r)]})]},"element-".concat(n.id,"-").concat(r)),Object(i.jsx)("div",{style:{display:"flex",flex:"1 1 auto"},children:Object(i.jsx)("button",{title:"Remove option",onClick:function(){var t=JSON.parse(JSON.stringify(o)),i=JSON.parse(JSON.stringify(n.configuration)),a=i.geometries.splice(r,1)[0];t.unshift(a),e(b({id:n.id,key:"configuration",value:i})),e(N(t))},children:Object(i.jsx)("svg",{fill:"currentColor",preserveAspectRatio:"xMidYMid meet",height:"1em",width:"1em",viewBox:"0 0 40 40",style:{verticalAlign:"middle"},children:Object(i.jsx)("g",{children:Object(i.jsx)("path",{d:"m15.9 30.7v-15.7q0-0.3-0.2-0.5t-0.5-0.2h-1.4q-0.3 0-0.5 0.2t-0.2 0.5v15.7q0 0.3 0.2 \r 0.5t0.5 0.2h1.4q0.3 0 0.5-0.2t0.2-0.5z m5.7 0v-15.7q0-0.3-0.2-0.5t-0.5-0.2h-1.4q-0.3 0-0.5 \r 0.2t-0.2 0.5v15.7q0 0.3 0.2 0.5t0.5 0.2h1.4q0.3 0 0.5-0.2t0.2-0.5z m5.8 \r 0v-15.7q0-0.3-0.2-0.5t-0.6-0.2h-1.4q-0.3 0-0.5 0.2t-0.2 0.5v15.7q0 0.3 0.2 0.5t0.5 \r 0.2h1.4q0.4 0 0.6-0.2t0.2-0.5z m-12.2-22.1h10l-1.1-2.6q-0.1-0.2-0.3-0.3h-7.1q-0.2 \r 0.1-0.4 0.3z m20.7 0.7v1.4q0 0.3-0.2 0.5t-0.5 0.2h-2.1v21.2q0 1.8-1.1 3.2t-2.5 \r 1.3h-18.6q-1.4 0-2.5-1.3t-1-3.1v-21.3h-2.2q-0.3 0-0.5-0.2t-0.2-0.5v-1.4q0-0.3 \r 0.2-0.5t0.5-0.2h6.9l1.6-3.8q0.3-0.8 1.2-1.4t1.7-0.5h7.2q0.9 0 1.8 0.5t1.2 1.4l1.5 \r 3.8h6.9q0.3 0 0.5 0.2t0.2 0.5z"})})})})})]})}))})}),Object(i.jsx)("div",{style:{display:"flex",color:"blue",fontWeight:"bold"},children:"Select A Geometry:"}),o.map((function(t,a){return Object(i.jsx)("div",{className:"geometry-option",style:{display:"flex"},onClick:function(){var t=JSON.parse(JSON.stringify(o)),i=t.splice(a,1)[0];i.disabledTextureControls=[];var r=JSON.parse(JSON.stringify(n.configuration));r.geometries.push(i),e(b({id:n.id,key:"configuration",value:r})),e(N(t))},children:Object(i.jsx)("div",{children:t.designation})},"element-".concat(n.id,"-").concat(a))}))]})]})},ut=function(t){var e=t.option,n=Object(s.b)();return Object(i.jsxs)("div",{className:"grouping__container",children:[Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsx)("p",{className:"nameFieldTitle",children:"Initial :"}),Object(i.jsx)("select",{onChange:function(t){return n(b({id:e.id,key:"initialValue",value:t.target.value}))},children:e.configuration.options.map((function(t,o){var a=!1;return""!==e.initialValue&&void 0!==e.initialValue||0!==o?a=t.name===e.initialValue:(a=!0,n(b({id:e.id,key:"initialValue",value:t.name}))),Object(i.jsx)("option",{selected:a,value:t.name,children:t.name})}))})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("h4",{children:"Code Name Map:"}),Object(i.jsx)(ct.ReactSortable,{list:e.configuration.options,setList:function(t){return function(t){var i=JSON.parse(JSON.stringify(e.configuration));i.options=t,n(b({id:e.id,key:"configuration",value:i}))}(t)},children:e.configuration.options.map((function(t,o){return Object(i.jsxs)("div",{children:[t.name,Object(i.jsx)("input",{value:t.humanReadable,onChange:function(t){var i=JSON.parse(JSON.stringify(e.configuration));i.options[o].humanReadable=t.target.value,n(b({id:e.id,key:"configuration",value:i}))}})]})}))})]})]})},mt=function(t){for(var e="",n=0;n<t;++n)e+="--";return e},pt=function(t){var e=Object(s.b)(),n=t.option,o=Object(s.c)(_).map((function(t){return Object(i.jsxs)("option",{value:t.instanceID,children:[mt(t.depth),t.name]})}));return o.unshift(Object(i.jsx)("option",{value:0,children:"Select a Node"})),Object(i.jsx)("select",{name:"nodes",id:"nodes",className:"material__select",value:n.entity.instanceID,onChange:function(t){return e(b({id:n.id,key:"entity",value:{instanceID:t.target.value}}))},children:o})},ft={animation:"red",color:"yellow",geometryCategory:"blue",textureCategory:"green",toggle:"purple"},gt=function(){var t=Object(s.c)(G),e=Object(s.c)(M),n=Object(s.b)(),o=function(t){return"animation"===t.type?Object(i.jsx)(it,{option:t}):"color"===t.type?Object(i.jsx)(st,{option:t}):"geometryCategory"===t.type?Object(i.jsx)(dt,{option:t}):"textureCategory"===t.type?Object(i.jsx)(ut,{option:t}):"toggle"===t.type?Object(i.jsx)(pt,{option:t}):void 0};return Object(i.jsxs)("div",{style:{overflow:"auto",display:"flex",flexDirection:"column"},children:[Object(i.jsx)("button",{className:"add-option add__button",disabled:e,onClick:function(){return n(z())},children:"+ Add Configurable Element"}),Object(i.jsx)("div",{className:"single-option__panels__container",children:Object(i.jsx)(ct.ReactSortable,{list:t,setList:function(t){return n(v(t))},children:function(t,e){return t.map((function(t,n,a){return Object(i.jsxs)("div",{className:"single-option__panel",children:[Object(i.jsxs)("div",{className:"single-option__header",children:[Object(i.jsx)("h3",{className:"single-option__title",style:{color:ft[t.type]},children:t.name}),Object(i.jsx)("button",{id:"collapseButton".concat(t.id),className:"collapse__button",onClick:function(n){return e(b({id:t.id,key:"isExpanded",value:!t.isExpanded}))},children:t.isExpanded?"Collapse":"Expand"}),Object(i.jsx)("button",{title:"Remove option",onClick:function(){var n=a.filter((function(e){return e.id!==t.id}));e(v(n))},children:Object(i.jsx)("svg",{fill:"currentColor",preserveAspectRatio:"xMidYMid meet",height:"1em",width:"1em",viewBox:"0 0 40 40",style:{verticalAlign:"middle"},children:Object(i.jsx)("g",{children:Object(i.jsx)("path",{d:"m15.9 30.7v-15.7q0-0.3-0.2-0.5t-0.5-0.2h-1.4q-0.3 0-0.5 0.2t-0.2 0.5v15.7q0 0.3 0.2 \r 0.5t0.5 0.2h1.4q0.3 0 0.5-0.2t0.2-0.5z m5.7 0v-15.7q0-0.3-0.2-0.5t-0.5-0.2h-1.4q-0.3 0-0.5 \r 0.2t-0.2 0.5v15.7q0 0.3 0.2 0.5t0.5 0.2h1.4q0.3 0 0.5-0.2t0.2-0.5z m5.8 \r 0v-15.7q0-0.3-0.2-0.5t-0.6-0.2h-1.4q-0.3 0-0.5 0.2t-0.2 0.5v15.7q0 0.3 0.2 0.5t0.5 \r 0.2h1.4q0.4 0 0.6-0.2t0.2-0.5z m-12.2-22.1h10l-1.1-2.6q-0.1-0.2-0.3-0.3h-7.1q-0.2 \r 0.1-0.4 0.3z m20.7 0.7v1.4q0 0.3-0.2 0.5t-0.5 0.2h-2.1v21.2q0 1.8-1.1 3.2t-2.5 \r 1.3h-18.6q-1.4 0-2.5-1.3t-1-3.1v-21.3h-2.2q-0.3 0-0.5-0.2t-0.2-0.5v-1.4q0-0.3 \r 0.2-0.5t0.5-0.2h6.9l1.6-3.8q0.3-0.8 1.2-1.4t1.7-0.5h7.2q0.9 0 1.8 0.5t1.2 1.4l1.5 \r 3.8h6.9q0.3 0 0.5 0.2t0.2 0.5z"})})})})]}),Object(i.jsxs)("div",{style:{display:t.isExpanded?"block":"none"},children:[Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsx)("p",{className:"nameFieldTitle",children:"Name:"}),Object(i.jsx)("input",{type:"text",name:"colorName",id:"colorName",value:t.name,onChange:function(n){return e(b({id:t.id,key:"name",value:n.target.value}))}})]}),o(t)]})]},"option-".concat(n))}))}(t,n)})})]})},ht=function(t){for(var e="",n=0;n<t;++n)e+=n+1+"_";return e},bt=function(){var t=Object(s.b)(),e=Object(s.c)(_),n=Object(s.c)(q),o=Object(s.c)(L),a=e.map((function(e){return Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsx)("input",{id:e.instanceID,type:"checkbox",checked:o[e.instanceID],onChange:function(e){e.target.checked?(n.show(e.target.id),t(O({id:e.target.id,value:!0}))):(n.hide(e.target.id),t(O({id:e.target.id,value:!1})))}}),Object(i.jsxs)("div",{className:"node-name",children:[ht(e.depth),e.name," - type: ",e.type]})]})}));return a.unshift(Object(i.jsxs)("div",{style:{display:"flex",borderBottom:"1px solid black"},children:[Object(i.jsx)("input",{type:"checkbox",checked:Object.values(o).reduce((function(t,e){return t&&e})),onChange:function(e){t(S(e.target.checked))}}),Object(i.jsx)("div",{className:"node-name",children:"All Nodes"})]})),Object(i.jsxs)("div",{style:{overflow:"auto"},children:[Object(i.jsx)("div",{id:"nodeControls",children:a}),Object(i.jsx)("div",{id:"animationControls"})]})},vt=function(){var t=Object(s.b)(),e=Object(s.c)(V),n=Object(s.c)(M),o={backgroundColor:"nodes"===e?"white":"gray"},a={backgroundColor:"options"===e?"white":"gray"};return Object(i.jsxs)("div",{className:"control-menu",children:[Object(i.jsxs)("div",{style:{display:"flex"},children:[Object(i.jsx)("button",{className:"control-menu__button",style:o,disabled:n,onClick:function(){return t(C("nodes"))},children:"Nodes"}),Object(i.jsx)("button",{className:"control-menu__button",style:a,onClick:function(){return t(C("options"))},children:"Options"})]}),function(t){return"options"===t?Object(i.jsx)(gt,{}):"nodes"===t?Object(i.jsx)(bt,{}):void 0}(e)]})};n(32),n(33);var yt=function(){return Object(i.jsxs)("div",{className:"App",children:[Object(i.jsx)($,{}),Object(i.jsxs)("div",{className:"body",children:[Object(i.jsx)(K,{}),Object(i.jsx)(vt,{}),Object(i.jsx)(Q,{}),Object(i.jsx)(tt,{}),Object(i.jsx)(et,{})]})]})},jt=n(17),xt=n.n(jt),Ot=Object(c.a)({reducer:W,middleware:function(t){return t().concat(xt.a)}});Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(Object(i.jsx)(a.a.StrictMode,{children:Object(i.jsx)(s.a,{store:Ot,children:Object(i.jsx)(yt,{})})}),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(t){t.unregister()}))},6:function(t,e){t.exports={buildSceneGraph:function t(e,n,i){for(var o=0;o<n.length;++o)"RootNode"!=n[o].name&&(void 0==n[o].name?e.sceneGraph.push({name:n[o].type,depth:i,instanceID:n[o].instanceID,materialID:n[o].materialID,type:n[o].type}):e.sceneGraph.push({name:n[o].name,depth:i,instanceID:n[o].instanceID,materialID:n[o].materialID,type:n[o].type}),e.sceneGraphIsVisible[n[o].instanceID]=!0),void 0==n[o].children&&null==n[o].children||t(e,n[o].children,i+1)},buildGeometryCategoryOptions:function(t){for(var e=[],n=[],i=0;i<t.sceneGraph.length;++i){for(var o=t.sceneGraph[i].name.split("-").filter((function(t){return""!=t})),a=o[0],r=o[1],l=o[2],s=3;s<o.length;++s)l+=o[s];-1==e.indexOf(a)&&-1==["Group","RootNode","MatrixTransform"].indexOf(a)&&(e.push(a),n.push({instanceID:t.sceneGraph[i].instanceID,designation:a,capitalLetter:r,detailedTitle:l,humanReadable:a,hiddenValues:[],allowsAnimation:!0}))}n.sort((function(t,e){return t.designation.charCodeAt(0)-e.designation.charCodeAt(0)})),t.geometryCategoryOptions=n},buildTextureOptions:function(t){for(var e={},n=[],i=0;i<t.length;++i){if(null!==t[i].name.match(/[a-zA-Z]*-[A-Z]+-[a-zA-Z]+/g)){var o=t[i].name.split("-").filter((function(t){return""!=t}))[0],a=t[i].name.match(/[A-Z]+-/g).map((function(t){return t.replace("-","")})),r=a[0];if(void 0===e[o]){e[o]={},n.push({name:o+" - Attribute 1",configuration:{isPrimary:!0,ordering:0,geometryName:o,options:[{name:a[0],humanReadable:a[0]}]},entity:{instanceID:0},entityIndex:"none",isExpanded:!0,type:"textureCategory"}),e[o][a[0]]=[];for(var l=1;l<a.length;++l)n.push({name:"".concat(o," - Attribute ").concat(l+1),configuration:{isPrimary:!1,ordering:l,geometryName:o,options:[{name:a[l],humanReadable:a[l]}]},entity:{instanceID:0},entityIndex:"none",isExpanded:!0,type:"textureCategory",initialValue:""}),e[o][r].push([a[l]])}else{for(var s=0;s<n.length;++s)if(n[s].configuration.geometryName===o){for(var c=!1,d=0;d<n[s].configuration.options.length;++d)if(n[s].configuration.options[d].name===a[0]){c=!0;break}!1===c&&n[s].configuration.options.push({name:a[0],humanReadable:a[0]});for(d=1;d<a.length;++d){c=!1;for(var u=0;u<n[s+d].configuration.options.length;++u)if(n[s+d].configuration.options[u].name===a[d]){c=!0;break}!1===c&&n[s+d].configuration.options.push({name:a[d],humanReadable:a[d]})}break}if(void 0===e[o][r]){e[o][r]=[];for(var m=1;m<a.length;++m)e[o][r].push([a[m]])}else for(var p=1;p<a.length;++p){var f=e[o][r][p-1];-1===f.indexOf(a[p])&&f.push(a[p])}}}}return{surfaceOptionMap:e,surfaceControls:n}}}}},[[34,1,2]]]);
//# sourceMappingURL=main.29c4f194.chunk.js.map